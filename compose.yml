services:
  backend:
    build:
      context: .
      dockerfile: ./backend/cmd/server/Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
  #   environment:
  #     - DB_HOST=pg_db
  #   depends_on:
  #     pg_db:
  #       condition: service_healthy
  #   restart: unless-stopped

  # pg_db:
  #   platform: linux/amd64
  #   image: postgres:17-alpine
  #   restart: always
  #   volumes:
  #     - data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: recruitment_app_db
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -d recruitment_app_db -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   user: "0:0"

  # gotenberg:
  #   image: gotenberg/gotenberg:8
  #   ports:
  #     - "3001:3000"

  # minio:
  #   image: minio/minio
  #   restart: always
  #   ports:
  #     - "9000:9000" # API port
  #     - "9001:9001" # Console port
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #     MINIO_DEFAULT_BUCKETS: "mybucket"
  #   volumes:
  #     - minio_data:/data
  #   command: server --console-address ":9001" /data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   ports:
  #     - "6379:6379"

volumes:
  data:
